# .github/workflows/streamlit-deploy.yml - Streamlit deployment pipeline
name: Streamlit App CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  # Code Quality Check
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort
          pip install -r requirements.txt

      - name: Code formatting check
        run: |
          black --check --diff .
          isort --check-only --diff .

      - name: Linting
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --max-complexity=10 --max-line-length=127 --statistics

  # Test the Streamlit app
  test:
    runs-on: ubuntu-latest
    needs: code-quality
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-mock

      - name: Run tests
        run: |
          python -m pytest tests/ -v --tb=short

      - name: Test Streamlit app import
        run: |
          python -c "import streamlit; print('Streamlit import successful')"
          python -c "import deployment.streamlit_app; print('App import successful')"

  # Security scan
  security:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit
          pip install -r requirements.txt

      - name: Run safety check
        run: |
          safety check --json --output safety-report.json || true

      - name: Run bandit security scan
        run: |
          bandit -r . -f json -o bandit-report.json || true

      - name: Upload security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            safety-report.json
            bandit-report.json

  # Deploy to Streamlit Cloud (automatic on push to main)
  deploy:
    runs-on: ubuntu-latest
    needs: [code-quality, test, security]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy notification
        run: |
          echo "ðŸš€ Deploying to Streamlit Cloud..."
          echo "App will be available at: https://share.streamlit.io/your-username/ezoverthinking/main/deployment/streamlit_app.py"

      - name: Send deployment notification
        if: success()
        run: |
          echo "âœ… Deployment successful! App is now live."
